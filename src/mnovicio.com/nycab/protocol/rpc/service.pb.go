// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package rpc

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	context "golang.org/x/net/context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
	objects "mnovicio.com/nycab/protocol/objects"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetAllCabTripsRequestV1 struct {
	IgnoreCache          bool     `protobuf:"varint,1,opt,name=ignore_cache,json=ignoreCache,proto3" json:"ignore_cache,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllCabTripsRequestV1) Reset()         { *m = GetAllCabTripsRequestV1{} }
func (m *GetAllCabTripsRequestV1) String() string { return proto.CompactTextString(m) }
func (*GetAllCabTripsRequestV1) ProtoMessage()    {}
func (*GetAllCabTripsRequestV1) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *GetAllCabTripsRequestV1) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllCabTripsRequestV1.Unmarshal(m, b)
}
func (m *GetAllCabTripsRequestV1) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllCabTripsRequestV1.Marshal(b, m, deterministic)
}
func (m *GetAllCabTripsRequestV1) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllCabTripsRequestV1.Merge(m, src)
}
func (m *GetAllCabTripsRequestV1) XXX_Size() int {
	return xxx_messageInfo_GetAllCabTripsRequestV1.Size(m)
}
func (m *GetAllCabTripsRequestV1) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllCabTripsRequestV1.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllCabTripsRequestV1 proto.InternalMessageInfo

func (m *GetAllCabTripsRequestV1) GetIgnoreCache() bool {
	if m != nil {
		return m.IgnoreCache
	}
	return false
}

type GetAllCabTripsResponseV1 struct {
	CabTripsPerDay       *objects.CabTripsPerDay `protobuf:"bytes,1,opt,name=cab_trips_per_day,json=cabTripsPerDay,proto3" json:"cab_trips_per_day,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *GetAllCabTripsResponseV1) Reset()         { *m = GetAllCabTripsResponseV1{} }
func (m *GetAllCabTripsResponseV1) String() string { return proto.CompactTextString(m) }
func (*GetAllCabTripsResponseV1) ProtoMessage()    {}
func (*GetAllCabTripsResponseV1) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *GetAllCabTripsResponseV1) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllCabTripsResponseV1.Unmarshal(m, b)
}
func (m *GetAllCabTripsResponseV1) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllCabTripsResponseV1.Marshal(b, m, deterministic)
}
func (m *GetAllCabTripsResponseV1) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllCabTripsResponseV1.Merge(m, src)
}
func (m *GetAllCabTripsResponseV1) XXX_Size() int {
	return xxx_messageInfo_GetAllCabTripsResponseV1.Size(m)
}
func (m *GetAllCabTripsResponseV1) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllCabTripsResponseV1.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllCabTripsResponseV1 proto.InternalMessageInfo

func (m *GetAllCabTripsResponseV1) GetCabTripsPerDay() *objects.CabTripsPerDay {
	if m != nil {
		return m.CabTripsPerDay
	}
	return nil
}

type ClearCacheRequestV1 struct {
	ClearCache           bool     `protobuf:"varint,1,opt,name=clear_cache,json=clearCache,proto3" json:"clear_cache,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClearCacheRequestV1) Reset()         { *m = ClearCacheRequestV1{} }
func (m *ClearCacheRequestV1) String() string { return proto.CompactTextString(m) }
func (*ClearCacheRequestV1) ProtoMessage()    {}
func (*ClearCacheRequestV1) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{2}
}

func (m *ClearCacheRequestV1) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearCacheRequestV1.Unmarshal(m, b)
}
func (m *ClearCacheRequestV1) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearCacheRequestV1.Marshal(b, m, deterministic)
}
func (m *ClearCacheRequestV1) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearCacheRequestV1.Merge(m, src)
}
func (m *ClearCacheRequestV1) XXX_Size() int {
	return xxx_messageInfo_ClearCacheRequestV1.Size(m)
}
func (m *ClearCacheRequestV1) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearCacheRequestV1.DiscardUnknown(m)
}

var xxx_messageInfo_ClearCacheRequestV1 proto.InternalMessageInfo

func (m *ClearCacheRequestV1) GetClearCache() bool {
	if m != nil {
		return m.ClearCache
	}
	return false
}

type ClearCacheResponseV1 struct {
	CacheCleared         bool     `protobuf:"varint,1,opt,name=cache_cleared,json=cacheCleared,proto3" json:"cache_cleared,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClearCacheResponseV1) Reset()         { *m = ClearCacheResponseV1{} }
func (m *ClearCacheResponseV1) String() string { return proto.CompactTextString(m) }
func (*ClearCacheResponseV1) ProtoMessage()    {}
func (*ClearCacheResponseV1) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{3}
}

func (m *ClearCacheResponseV1) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearCacheResponseV1.Unmarshal(m, b)
}
func (m *ClearCacheResponseV1) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearCacheResponseV1.Marshal(b, m, deterministic)
}
func (m *ClearCacheResponseV1) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearCacheResponseV1.Merge(m, src)
}
func (m *ClearCacheResponseV1) XXX_Size() int {
	return xxx_messageInfo_ClearCacheResponseV1.Size(m)
}
func (m *ClearCacheResponseV1) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearCacheResponseV1.DiscardUnknown(m)
}

var xxx_messageInfo_ClearCacheResponseV1 proto.InternalMessageInfo

func (m *ClearCacheResponseV1) GetCacheCleared() bool {
	if m != nil {
		return m.CacheCleared
	}
	return false
}

type GetTripCountsForCabIDsRequestV1 struct {
	CabIds               []string `protobuf:"bytes,1,rep,name=cab_ids,json=cabIds,proto3" json:"cab_ids,omitempty"`
	IgnoreCache          bool     `protobuf:"varint,2,opt,name=ignore_cache,json=ignoreCache,proto3" json:"ignore_cache,omitempty"`
	PickupDate           string   `protobuf:"bytes,3,opt,name=pickup_date,json=pickupDate,proto3" json:"pickup_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTripCountsForCabIDsRequestV1) Reset()         { *m = GetTripCountsForCabIDsRequestV1{} }
func (m *GetTripCountsForCabIDsRequestV1) String() string { return proto.CompactTextString(m) }
func (*GetTripCountsForCabIDsRequestV1) ProtoMessage()    {}
func (*GetTripCountsForCabIDsRequestV1) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{4}
}

func (m *GetTripCountsForCabIDsRequestV1) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTripCountsForCabIDsRequestV1.Unmarshal(m, b)
}
func (m *GetTripCountsForCabIDsRequestV1) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTripCountsForCabIDsRequestV1.Marshal(b, m, deterministic)
}
func (m *GetTripCountsForCabIDsRequestV1) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTripCountsForCabIDsRequestV1.Merge(m, src)
}
func (m *GetTripCountsForCabIDsRequestV1) XXX_Size() int {
	return xxx_messageInfo_GetTripCountsForCabIDsRequestV1.Size(m)
}
func (m *GetTripCountsForCabIDsRequestV1) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTripCountsForCabIDsRequestV1.DiscardUnknown(m)
}

var xxx_messageInfo_GetTripCountsForCabIDsRequestV1 proto.InternalMessageInfo

func (m *GetTripCountsForCabIDsRequestV1) GetCabIds() []string {
	if m != nil {
		return m.CabIds
	}
	return nil
}

func (m *GetTripCountsForCabIDsRequestV1) GetIgnoreCache() bool {
	if m != nil {
		return m.IgnoreCache
	}
	return false
}

func (m *GetTripCountsForCabIDsRequestV1) GetPickupDate() string {
	if m != nil {
		return m.PickupDate
	}
	return ""
}

type GetTripCountsForCabIDsResponseV1 struct {
	CabTripsPerDay       *objects.CabTripsPerDay `protobuf:"bytes,1,opt,name=cab_trips_per_day,json=cabTripsPerDay,proto3" json:"cab_trips_per_day,omitempty"`
	Error                string                  `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *GetTripCountsForCabIDsResponseV1) Reset()         { *m = GetTripCountsForCabIDsResponseV1{} }
func (m *GetTripCountsForCabIDsResponseV1) String() string { return proto.CompactTextString(m) }
func (*GetTripCountsForCabIDsResponseV1) ProtoMessage()    {}
func (*GetTripCountsForCabIDsResponseV1) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{5}
}

func (m *GetTripCountsForCabIDsResponseV1) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTripCountsForCabIDsResponseV1.Unmarshal(m, b)
}
func (m *GetTripCountsForCabIDsResponseV1) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTripCountsForCabIDsResponseV1.Marshal(b, m, deterministic)
}
func (m *GetTripCountsForCabIDsResponseV1) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTripCountsForCabIDsResponseV1.Merge(m, src)
}
func (m *GetTripCountsForCabIDsResponseV1) XXX_Size() int {
	return xxx_messageInfo_GetTripCountsForCabIDsResponseV1.Size(m)
}
func (m *GetTripCountsForCabIDsResponseV1) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTripCountsForCabIDsResponseV1.DiscardUnknown(m)
}

var xxx_messageInfo_GetTripCountsForCabIDsResponseV1 proto.InternalMessageInfo

func (m *GetTripCountsForCabIDsResponseV1) GetCabTripsPerDay() *objects.CabTripsPerDay {
	if m != nil {
		return m.CabTripsPerDay
	}
	return nil
}

func (m *GetTripCountsForCabIDsResponseV1) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*GetAllCabTripsRequestV1)(nil), "nycab.rpc.GetAllCabTripsRequestV1")
	proto.RegisterType((*GetAllCabTripsResponseV1)(nil), "nycab.rpc.GetAllCabTripsResponseV1")
	proto.RegisterType((*ClearCacheRequestV1)(nil), "nycab.rpc.ClearCacheRequestV1")
	proto.RegisterType((*ClearCacheResponseV1)(nil), "nycab.rpc.ClearCacheResponseV1")
	proto.RegisterType((*GetTripCountsForCabIDsRequestV1)(nil), "nycab.rpc.GetTripCountsForCabIDsRequestV1")
	proto.RegisterType((*GetTripCountsForCabIDsResponseV1)(nil), "nycab.rpc.GetTripCountsForCabIDsResponseV1")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 679 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0xcf, 0x6f, 0x13, 0x3b,
	0x10, 0xd6, 0x26, 0xef, 0xb5, 0x2f, 0x6e, 0x5a, 0xbd, 0xee, 0xab, 0x5e, 0xd2, 0x08, 0x35, 0xcb,
	0xb6, 0x87, 0x2a, 0xd0, 0xdd, 0x26, 0x54, 0x1c, 0x52, 0x0e, 0x94, 0xad, 0xa8, 0x7a, 0xa0, 0x42,
	0x0b, 0x8a, 0x54, 0x0e, 0x44, 0x5e, 0xef, 0x68, 0xe3, 0xb2, 0xb1, 0x8d, 0xed, 0xb4, 0xe4, 0x52,
	0x21, 0x2e, 0xdc, 0xe1, 0x04, 0xe2, 0xbf, 0xe2, 0xc8, 0x95, 0x3f, 0x04, 0xad, 0x37, 0x49, 0x93,
	0xfe, 0x12, 0x17, 0x4e, 0x96, 0x3f, 0x7f, 0x33, 0xf3, 0xcd, 0xcc, 0x27, 0xa3, 0x45, 0x05, 0xf2,
	0x94, 0x12, 0xf0, 0x84, 0xe4, 0x9a, 0xdb, 0x25, 0x36, 0x24, 0x38, 0xf2, 0xa4, 0x20, 0xb5, 0x3b,
	0x09, 0xe7, 0x49, 0x0a, 0x3e, 0x16, 0xd4, 0xc7, 0x8c, 0x71, 0x8d, 0x35, 0xe5, 0x4c, 0xe5, 0xc4,
	0xda, 0x7d, 0x73, 0x90, 0xad, 0x04, 0xd8, 0x96, 0x3a, 0xc3, 0x49, 0x02, 0xd2, 0xe7, 0xc2, 0x30,
	0xae, 0x61, 0x6f, 0x98, 0xb4, 0x7e, 0x1e, 0xc3, 0x53, 0x9f, 0x47, 0x27, 0x40, 0xb4, 0x1a, 0x9f,
	0x39, 0xcb, 0x7d, 0x84, 0x2a, 0x07, 0xa0, 0xf7, 0xd2, 0x34, 0xc0, 0xd1, 0x4b, 0x49, 0x85, 0x0a,
	0xe1, 0xed, 0x00, 0x94, 0xee, 0x34, 0xed, 0xbb, 0xa8, 0x4c, 0x13, 0xc6, 0x25, 0x74, 0x09, 0x26,
	0x3d, 0xa8, 0x5a, 0x8e, 0xb5, 0xf9, 0x4f, 0xb8, 0x90, 0x63, 0x41, 0x06, 0xb9, 0x14, 0x55, 0x2f,
	0x47, 0x2b, 0xc1, 0x99, 0x82, 0x4e, 0xd3, 0x7e, 0x86, 0x96, 0x09, 0x8e, 0xba, 0x3a, 0x83, 0xbb,
	0x02, 0x64, 0x37, 0xc6, 0x43, 0x93, 0x63, 0xa1, 0xe5, 0x7a, 0x79, 0xcb, 0x31, 0xd6, 0xd8, 0x1b,
	0xeb, 0x19, 0xa7, 0x78, 0x0e, 0x72, 0x1f, 0x0f, 0xc3, 0x25, 0x32, 0x73, 0x77, 0x1f, 0xa2, 0xff,
	0x82, 0x14, 0xb0, 0x34, 0x85, 0x2f, 0x44, 0xd6, 0xd1, 0x02, 0xc9, 0xe0, 0x19, 0x8d, 0x88, 0x4c,
	0x98, 0xee, 0x2e, 0x5a, 0x99, 0x8e, 0x9b, 0xc8, 0x5b, 0x47, 0x8b, 0x26, 0xa4, 0x6b, 0xb8, 0x10,
	0x8f, 0x42, 0xcb, 0x06, 0x0c, 0x72, 0xcc, 0x3d, 0x47, 0xf5, 0x03, 0xd0, 0x99, 0x8c, 0x80, 0x0f,
	0x98, 0x56, 0x4f, 0xb9, 0x0c, 0x70, 0x74, 0xb8, 0x3f, 0x35, 0xa5, 0x0a, 0x9a, 0xcf, 0xda, 0xa4,
	0xb1, 0xaa, 0x5a, 0x4e, 0x71, 0xb3, 0x14, 0xce, 0x11, 0x1c, 0x1d, 0xc6, 0xea, 0xca, 0xf8, 0x0a,
	0x57, 0xc6, 0x97, 0x89, 0x17, 0x94, 0xbc, 0x19, 0x88, 0x6e, 0x8c, 0x35, 0x54, 0x8b, 0x8e, 0xb5,
	0x59, 0x0a, 0x51, 0x0e, 0xed, 0x63, 0x0d, 0xee, 0x47, 0x0b, 0x39, 0x37, 0x09, 0xf8, 0x43, 0x83,
	0xb6, 0x57, 0xd0, 0xdf, 0x20, 0x25, 0x97, 0x46, 0x70, 0x29, 0xcc, 0x2f, 0xad, 0x6f, 0x45, 0x54,
	0x3e, 0x3a, 0x0e, 0x70, 0xf4, 0x22, 0xf7, 0xae, 0x7d, 0x8e, 0x6a, 0x33, 0xab, 0x37, 0xfa, 0xf2,
	0x14, 0x9d, 0xa6, 0x3d, 0x2e, 0x2c, 0x05, 0xf1, 0x6e, 0xf0, 0x57, 0x6d, 0xfd, 0x16, 0xce, 0xb8,
	0x39, 0xb7, 0xf2, 0xe1, 0xfb, 0xcf, 0xcf, 0x85, 0x65, 0xb7, 0xec, 0x9f, 0x36, 0x7d, 0x82, 0x23,
	0xd3, 0x65, 0xdb, 0x6a, 0xd8, 0x02, 0x95, 0x2f, 0xf6, 0xda, 0x69, 0xda, 0x6b, 0x53, 0xd9, 0xae,
	0x31, 0x4a, 0xad, 0x7e, 0xc3, 0xfb, 0xa4, 0x52, 0xdd, 0x54, 0x5a, 0xb5, 0x2b, 0xd3, 0x95, 0x7c,
	0xe3, 0x0e, 0xb3, 0x40, 0xfb, 0x8b, 0x65, 0xdc, 0x7e, 0xcd, 0x32, 0x3a, 0x4d, 0xbb, 0x31, 0xdb,
	0xcc, 0x6d, 0x96, 0xa9, 0xdd, 0xfb, 0x0d, 0xee, 0x44, 0xd6, 0x86, 0x91, 0xb5, 0xe6, 0xae, 0xce,
	0xc8, 0x8a, 0x86, 0xb9, 0x4b, 0x32, 0xdf, 0xb4, 0xad, 0xc6, 0x93, 0xf7, 0x85, 0x4f, 0x7b, 0x3f,
	0x2c, 0x7b, 0x80, 0x96, 0x8e, 0x8e, 0x9d, 0x00, 0x47, 0xce, 0xe8, 0x8b, 0x71, 0x5f, 0xa3, 0xff,
	0x47, 0xc8, 0x68, 0x71, 0x8e, 0x90, 0x3c, 0xf3, 0x81, 0xed, 0xf6, 0xb4, 0x16, 0xaa, 0xed, 0xfb,
	0x09, 0xd5, 0xbd, 0x41, 0xe4, 0x11, 0xde, 0xf7, 0xfb, 0x8c, 0x9f, 0x52, 0x42, 0xb9, 0xcf, 0x86,
	0x5d, 0x82, 0xa3, 0x9a, 0xd3, 0xa7, 0xa4, 0x87, 0x21, 0xf5, 0x30, 0x4b, 0x20, 0xe5, 0xde, 0xe8,
	0xf9, 0x71, 0xd2, 0xc7, 0x34, 0xcd, 0x22, 0x5a, 0xc5, 0xa6, 0xb7, 0xdd, 0xb0, 0xac, 0xd6, 0xbf,
	0x58, 0x88, 0x94, 0x12, 0xf3, 0x03, 0xf9, 0x27, 0x8a, 0xb3, 0xf6, 0x15, 0x24, 0xdc, 0x45, 0xc5,
	0x9d, 0xed, 0x1d, 0x7b, 0x07, 0x35, 0x42, 0xd0, 0x03, 0xc9, 0x20, 0x76, 0xce, 0x7a, 0xc0, 0x1c,
	0xdd, 0x03, 0x47, 0x82, 0xe2, 0x03, 0x49, 0xc0, 0x89, 0x39, 0x28, 0x87, 0x71, 0xed, 0xc0, 0x3b,
	0xaa, 0xb4, 0x67, 0xcf, 0xa1, 0xbf, 0xbe, 0x16, 0xac, 0xf9, 0x57, 0xf5, 0xb1, 0x36, 0x23, 0xf4,
	0xd2, 0xdf, 0x26, 0x05, 0x89, 0xe6, 0xcc, 0xed, 0xc1, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5e,
	0xce, 0x47, 0xd9, 0x5e, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NYCabServiceClient is the client API for NYCabService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NYCabServiceClient interface {
	GetAllCabTripCountPerDayV1(ctx context.Context, in *GetAllCabTripsRequestV1, opts ...grpc.CallOption) (*GetAllCabTripsResponseV1, error)
	ClearCacheV1(ctx context.Context, in *ClearCacheRequestV1, opts ...grpc.CallOption) (*ClearCacheResponseV1, error)
	GetTripCountsForCabIDsV1(ctx context.Context, in *GetTripCountsForCabIDsRequestV1, opts ...grpc.CallOption) (*GetTripCountsForCabIDsResponseV1, error)
}

type nYCabServiceClient struct {
	cc *grpc.ClientConn
}

func NewNYCabServiceClient(cc *grpc.ClientConn) NYCabServiceClient {
	return &nYCabServiceClient{cc}
}

func (c *nYCabServiceClient) GetAllCabTripCountPerDayV1(ctx context.Context, in *GetAllCabTripsRequestV1, opts ...grpc.CallOption) (*GetAllCabTripsResponseV1, error) {
	out := new(GetAllCabTripsResponseV1)
	err := c.cc.Invoke(ctx, "/nycab.rpc.NYCabService/GetAllCabTripCountPerDayV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nYCabServiceClient) ClearCacheV1(ctx context.Context, in *ClearCacheRequestV1, opts ...grpc.CallOption) (*ClearCacheResponseV1, error) {
	out := new(ClearCacheResponseV1)
	err := c.cc.Invoke(ctx, "/nycab.rpc.NYCabService/ClearCacheV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nYCabServiceClient) GetTripCountsForCabIDsV1(ctx context.Context, in *GetTripCountsForCabIDsRequestV1, opts ...grpc.CallOption) (*GetTripCountsForCabIDsResponseV1, error) {
	out := new(GetTripCountsForCabIDsResponseV1)
	err := c.cc.Invoke(ctx, "/nycab.rpc.NYCabService/GetTripCountsForCabIDsV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NYCabServiceServer is the server API for NYCabService service.
type NYCabServiceServer interface {
	GetAllCabTripCountPerDayV1(context.Context, *GetAllCabTripsRequestV1) (*GetAllCabTripsResponseV1, error)
	ClearCacheV1(context.Context, *ClearCacheRequestV1) (*ClearCacheResponseV1, error)
	GetTripCountsForCabIDsV1(context.Context, *GetTripCountsForCabIDsRequestV1) (*GetTripCountsForCabIDsResponseV1, error)
}

func RegisterNYCabServiceServer(s *grpc.Server, srv NYCabServiceServer) {
	s.RegisterService(&_NYCabService_serviceDesc, srv)
}

func _NYCabService_GetAllCabTripCountPerDayV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllCabTripsRequestV1)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NYCabServiceServer).GetAllCabTripCountPerDayV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nycab.rpc.NYCabService/GetAllCabTripCountPerDayV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NYCabServiceServer).GetAllCabTripCountPerDayV1(ctx, req.(*GetAllCabTripsRequestV1))
	}
	return interceptor(ctx, in, info, handler)
}

func _NYCabService_ClearCacheV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClearCacheRequestV1)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NYCabServiceServer).ClearCacheV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nycab.rpc.NYCabService/ClearCacheV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NYCabServiceServer).ClearCacheV1(ctx, req.(*ClearCacheRequestV1))
	}
	return interceptor(ctx, in, info, handler)
}

func _NYCabService_GetTripCountsForCabIDsV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTripCountsForCabIDsRequestV1)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NYCabServiceServer).GetTripCountsForCabIDsV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nycab.rpc.NYCabService/GetTripCountsForCabIDsV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NYCabServiceServer).GetTripCountsForCabIDsV1(ctx, req.(*GetTripCountsForCabIDsRequestV1))
	}
	return interceptor(ctx, in, info, handler)
}

var _NYCabService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "nycab.rpc.NYCabService",
	HandlerType: (*NYCabServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAllCabTripCountPerDayV1",
			Handler:    _NYCabService_GetAllCabTripCountPerDayV1_Handler,
		},
		{
			MethodName: "ClearCacheV1",
			Handler:    _NYCabService_ClearCacheV1_Handler,
		},
		{
			MethodName: "GetTripCountsForCabIDsV1",
			Handler:    _NYCabService_GetTripCountsForCabIDsV1_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
